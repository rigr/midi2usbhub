name: Build midi2usbhub UF2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake gcc-arm-none-eabi g++ build-essential libusb-1.0-0-dev

    - name: Setup Pico SDK
      run: |
        git clone https://github.com/raspberrypi/pico-sdk.git --branch 2.0.0
        cd pico-sdk
        git submodule update --init
        echo "PICO_SDK_PATH=$(pwd)" >> $GITHUB_ENV

    - name: Verify libusb installation
      run: |
        ls -l /usr/include/libusb-1.0/libusb.h || echo "libusb.h not found"
        ls -l /usr/lib/x86_64-linux-gnu/libusb-1.0.so || echo "libusb-1.0.so not found"

    - name: Force libusb in CMakeLists.txt
      run: |
        echo 'cmake_minimum_required(VERSION 3.12)' > CMakeLists.txt
        echo 'include($ENV{PICO_SDK_PATH}/external/pico_sdk_import.cmake)' >> CMakeLists.txt
        echo 'project(midi2usbhub C CXX ASM)' >> CMakeLists.txt
        echo 'set(CMAKE_C_STANDARD 11)' >> CMakeLists.txt
        echo 'set(CMAKE_CXX_STANDARD 17)' >> CMakeLists.txt
        echo 'pico_sdk_init()' >> CMakeLists.txt
        echo 'add_executable(${PROJECT_NAME} src/main.c src/midi2usbhub.c src/cli.c src/preset_manager.c)' >> CMakeLists.txt
        echo 'pico_enable_stdio_usb(${PROJECT_NAME} 0)' >> CMakeLists.txt
        echo 'pico_enable_stdio_uart(${PROJECT_NAME} 1)' >> CMakeLists.txt
        echo 'pico_add_extra_outputs(${PROJECT_NAME})' >> CMakeLists.txt
        echo 'add_subdirectory(lib/tinyusb lib/tinyusb)' >> CMakeLists.txt
        echo 'add_subdirectory(lib/usb_midi_host lib/usb_midi_host)' >> CMakeLists.txt
        echo 'set(LIBUSB_LIBRARY "/usr/lib/x86_64-linux-gnu/libusb-1.0.so" CACHE FILEPATH "Path to libusb library" FORCE)' >> CMakeLists.txt
        echo 'set(LIBUSB_INCLUDE_DIR "/usr/include/libusb-1.0" CACHE PATH "Path to libusb include dir" FORCE)' >> CMakeLists.txt
        echo 'message(STATUS "libUSB forced - building with USB support")' >> CMakeLists.txt
        echo 'add_definitions(-DUSE_USB=1)' >> CMakeLists.txt
        echo 'target_include_directories(${PROJECT_NAME} PRIVATE ${LIBUSB_INCLUDE_DIR} ${CMAKE_CURRENT_LIST_DIR}/src)' >> CMakeLists.txt
        echo 'target_link_libraries(${PROJECT_NAME} pico_stdlib tinyusb_host tinyusb_board usb_midi_host ${LIBUSB_LIBRARY})' >> CMakeLists.txt
        cat CMakeLists.txt

    - name: Build the project
      run: |
        mkdir build
        cd build
        cmake .. -DPICO_BOARD=pico -DPICO_SDK_PATH=${{ env.PICO_SDK_PATH }}
        make

    - name: Upload UF2 artifact
      uses: actions/upload-artifact@v4
      with:
        name: midi2usbhub.uf2
        path: build/midi2usbhub.uf2
